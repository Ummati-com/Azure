{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environment": {
      "metadata": {
        "description": "The name of the environment."
      },
      "type": "string"
    },
    // Azure Key Vault
    "key_vault_name": {
      "metadata": {
        "description": "Name of the Vault"
      },
      "type": "string"
    },
    "key_vault_location": {
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location of the key vault resource."
      },
      "type": "string"
    },
    "key_vault_tenantId": {
      "defaultValue": "[subscription().tenantId]",
      "metadata": {
        "description": "Tenant Id of the subscription. Get using Get-AzureRmSubscription cmdlet or Get Subscription API"
      },
      "type": "string"
    },
    "key_vault_objectId": {
      "metadata": {
        "description": "Object Id of the AD user. Get using Get-AzureRmADUser or Get-AzureRmADServicePrincipal cmdlets"
      },
      "type": "string"
    },
    "key_vault_certificatesPermissions": {
      "defaultValue": [
        "list"
      ],
      "metadata": {
        "description": "Permissions to certificates in the vault."
      },
      "type": "array"
    },
    "key_vault_keysPermissions": {
      "defaultValue": [
        "list"
      ],
      "metadata": {
        "description": "Permissions to keys in the vault. Valid values are: all, create, import, update, get, list, delete, backup, restore, encrypt, decrypt, wrapkey, unwrapkey, sign, and verify."
      },
      "type": "array"
    },
    "key_vault_secretsPermissions": {
      "defaultValue": [
        "list"
      ],
      "metadata": {
        "description": "Permissions to secrets in the vault. Valid values are: all, get, set, list, and delete."
      },
      "type": "array"
    },
    "key_vault_networkAcls": {
      "metadata": {
        "description": "The network firewall defined for this vault."
      },
      "type": "object"
    },
    "key_vault_sku": {
      "allowedValues": [
        "Standard",
        "Premium"
      ],
      "defaultValue": "Standard",
      "metadata": {
        "description": "SKU for the vault"
      },
      "type": "string"
    },
    "key_vault_enabledForDeployment": {
      "allowedValues": [
        true,
        false
      ],
      "defaultValue": false,
      "metadata": {
        "description": "Specifies if the vault is enabled for a VM deployment"
      },
      "type": "bool"
    },
    "key_vault_enabledForDiskEncryption": {
      "allowedValues": [
        true,
        false
      ],
      "defaultValue": false,
      "metadata": {
        "description": "Specifies if the azure platform has access to the vault for enabling disk encryption scenarios."
      },
      "type": "bool"
    },
    "key_vault_enabledForTemplateDeployment": {
      "allowedValues": [
        true,
        false
      ],
      "defaultValue": false,
      "metadata": {
        "description": "Specifies whether Azure Resource Manager is permitted to retrieve secrets from the key vault."
      },
      "type": "bool"
    },
    // Azure Application Insights
    "application_insights_name": {
      "metadata": {
        "description": "The name of the Application Insights component resource."
      },
      "type": "string"
    },
    "application_insights_kind": {
      "allowedValues": [
        "web",
        "ios",
        "other",
        "store",
        "java",
        "phone"
      ],
      "metadata": {
        "description": "The kind of application that this component refers to, used to customize UI. This value is a freeform string, values should typically be one of the following: web, ios, other, store, java, phone."
      },
      "type": "string"
    },
    "application_insights_location": {
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Specify the region for application insights"
      },
      "type": "string"
    },
    "application_insights_type": {
      "allowedValues": [
        "web",
        "other"
      ],
      "metadata": {
        "description": "Type of application being monitored. - web or other"
      },
      "type": "string"
    },
    "application_insights_samplingPercentage": {
      "defaultValue": 100,
      "metadata": {
        "description": "Percentage of the data produced by the application being monitored that is being sampled for Application Insights telemetry."
      },
      "type": "int"
    },
    // Azure Log Analytics
    "log_analytics_name": {
      "metadata": {
        "description": "The name of the log analytics"
      },
      "type": "string"
    },
    "log_analytics_location": {
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Specify the region for your OMS workspace"
      },
      "type": "string"
    },
    "log_analytics_workspaceId": {
      "metadata": {
        "description": "Specify the resource id of the OMS workspace"
      },
      "type": "string"
    },
    "log_analytics_sku": {
      "allowedValues": [
        "free",
        "standalone",
        "pernode"
      ],
      "defaultValue": "free",
      "metadata": {
        "description": "Select the SKU for your workspace"
      },
      "type": "string"
    },
    "log_analytics_retentionInDays": {
      "metadata": {
        "description": "The workspace data retention in days. -1 means Unlimited retention for the Unlimited Sku. 730 days is the maximum allowed for all other Skus."
      },
      "maxValue": 730,
      "minValue": -1,
      "type": "int"
    },
    // Azure Kubernetes Service
    "kubernetes_name": {
      "metadata": {
        "description": "The name of the Managed Cluster resource."
      },
      "type": "string"
    },
    "kubernetes_location": {
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location of AKS resource."
      },
      "type": "string"
    },
    "kubernetes_dnsPrefix": {
      "metadata": {
        "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
      },
      "type": "string"
    },
    "kubernetes_mainAgentPool_agentCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "The number of agents for the cluster."
      },
      "maxValue": 999,
      "minValue": 1,
      "type": "int"
    },
    "kubernetes_mainAgentPool_enableAutoScaling": {
      "defaultValue": true,
      "metadata": {
        "description": "Whether to enable auto-scaler."
      },
      "type": "bool"
    },
    "kubernetes_mainAgentPool_maxCount": {
      "defaultValue": 1,
      "metadata": {
        "description": "Maximum number of nodes for auto-scaling."
      },
      "type": "int"
    },
    "kubernetes_mainAgentPool_minCount": {
      "defaultValue": 1,
      "metadata": {
        "description": "Minimum number of nodes for auto-scaling."
      },
      "type": "int"
    },
    "kubernetes_mainAgentPool_maxPods": {
      "defaultValue": 30,
      "metadata": {
        "description": "Maximum number of pods that can run on a node."
      },
      "type": "int"
    },
    "kubernetes_mainAgentPool_osDiskSizeGB": {
      "defaultValue": 0,
      "metadata": {
        "description": "Disk size (in GiB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
      },
      "maxValue": 1023,
      "minValue": 0,
      "type": "int"
    },
    "kubernetes_mainAgentPool_osType": {
      "allowedValues": [
        "Linux"
      ],
      "defaultValue": "Linux",
      "metadata": {
        "description": "The type of operating system."
      },
      "type": "string"
    },
    "kubernetes_mainAgentPool_agentVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "kubernetes_kubernetesVersion": {
      "metadata": {
        "description": "The version of Kubernetes."
      },
      "type": "string"
    },
    "kubernetes_enableRBAC": {
      "defaultValue": true,
      "metadata": {
        "description": "Whether to enable Kubernetes Role-Based Access Control."
      },
      "type": "bool"
    },
    "kubernetes_enablePodSecurityPolicy": {
      "defaultValue": false,
      "metadata": {
        "description": "Whether to enable Kubernetes Pod security policy."
      },
      "type": "bool"
    },
    "kubernetes_enableHttpApplicationRouting": {
      "defaultValue": false,
      "metadata": {
        "description": "boolean flag to turn on and off of http application routing"
      },
      "type": "bool"
    },
    //"kubernetes_adminUsername": {
    //  "type": "string",
    //  "metadata": {
    //    "description": "User name for the Linux Virtual Machines."
    //  }
    //},
    //"kubernetes_sshPublicKey": {
    //  "type": "securestring",
    //  "metadata": {
    //    "description": "Configure all linux machines with the SSH RSA public key string.  Your key should include three parts, for example 'ssh-rsa AAAAB...snip...UcyupgH azureuser@linuxvm'"
    //  }
    //},
    "kubernetes_servicePrincipalClientId": {
      "metadata": {
        "description": "Client ID (used by cloudprovider)"
      },
      "type": "securestring"
    },
    "kubernetes_servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "kubernetes_networkPlugin": {
      "allowedValues": [
        "azure",
        "kubenet"
      ],
      "defaultValue": "kubenet",
      "metadata": {
        "description": "Network plugin used for building Kubernetes network."
      },
      "type": "string"
    },
    "kubernetes_networkPolicy": {
      "allowedValues": [
        "azure",
        "calico"
      ],
      "defaultValue": "calico",
      "metadata": {
        "description": "Network policy used for building Kubernetes network."
      },
      "type": "string"
    },
    "kubernetes_enableOmsAgent": {
      "defaultValue": true,
      "metadata": {
        "description": "boolean flag to turn on and off of omsagent addon"
      },
      "type": "bool"
    }
  },
  "variables": {
    "container_insights_name": "[concat('ContainerInsights(', split(parameters('log_analytics_workspaceId'),'/')[8], ')')]",
    "application_insights_resourceId": "[resourceId('Microsoft.Insights/components', parameters('application_insights_name'))]",
    "container_insights_resourceId": "[resourceId('Microsoft.OperationsManagement/solutions', variables('container_insights_name'))]",
    "key_vault_resourceId": "[resourceId('Microsoft.KeyVault/vaults', parameters('key_vault_name'))]",
    "kubernetes_resourceId": "[resourceId('Microsoft.ContainerService/managedClusters', parameters('kubernetes_name'))]",
    "log_analytics_resourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('log_analytics_name'))]"
  },
  "resources": [
    {
      // https://docs.microsoft.com/en-us/azure/templates/microsoft.keyvault/2018-02-14/vaults
      "comments": "Azure Key Vault",
      "type": "Microsoft.KeyVault/vaults",
      "name": "[parameters('key_vault_name')]",
      "apiVersion": "2018-02-14",
      "location": "[parameters('key_vault_location')]",
      "properties": {
        "enabledForDeployment": "[parameters('key_vault_enabledForDeployment')]",
        "enabledForDiskEncryption": "[parameters('key_vault_enabledForDiskEncryption')]",
        "enabledForTemplateDeployment": "[parameters('key_vault_enabledForTemplateDeployment')]",
        "tenantId": "[parameters('key_vault_tenantId')]",
        "accessPolicies": [
          {
            "tenantId": "[parameters('key_vault_tenantId')]",
            "objectId": "[parameters('key_vault_objectId')]",
            "permissions": {
              "certificates": "[parameters('key_vault_certificatesPermissions')]",
              "keys": "[parameters('key_vault_keysPermissions')]",
              "secrets": "[parameters('key_vault_secretsPermissions')]"
            }
          }
        ],
        "networkAcls": "[parameters('key_vault_networkAcls')]",
        "sku": {
          "name": "[parameters('key_vault_sku')]",
          "family": "A"
        }
      },
      "tags": {
        "Environment": "[parameters('environment')]"
      }
    },
    {
      // https://docs.microsoft.com/en-us/azure/templates/microsoft.keyvault/allversions
      "comments": "Azure Key Vault Secret (Application Insights Instrumentation Key)",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('application_insights_name'), '/ApplicationInsightsInstrumentationKey')]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[variables('application_insights_resourceId')]",
        "[variables('key_vault_resourceId')]"
      ],
      "properties": {
        "contentType": "text/plain",
        "value": "[reference(variables('application_insights_resourceId'), '2014-04-01').InstrumentationKey]"
      }
    },
    {
      // https://docs.microsoft.com/en-us/azure/templates/microsoft.keyvault/allversions
      "comments": "Azure Key Vault Secret (Kubernetes Server)",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('key_vault_name'), '/KubernetesServer')]",
      "apiVersion": "2018-02-14",
      "dependsOn": [
        "[variables('key_vault_resourceId')]",
        "[variables('kubernetes_resourceId')]"
      ],
      "properties": {
        "contentType": "text/plain",
        "value": "[reference(variables('kubernetes_resourceId')).fqdn]"
      }
    },
    {
     // https://docs.microsoft.com/en-us/azure/templates/microsoft.keyvault/allversions
     "comments": "Azure Key Vault Secret (Kubernetes Service Principal Client ID)",
     "type": "Microsoft.KeyVault/vaults/secrets",
     "name": "[concat(parameters('key_vault_name'), '/KubernetesServicePrincipalClientId')]",
     "apiVersion": "2018-02-14",
     "dependsOn": [
       "[variables('key_vault_resourceId')]",
       "[variables('kubernetes_resourceId')]"
     ],
     "properties": {
       "contentType": "text/plain",
       "value": "[parameters('kubernetes_servicePrincipalClientId')]"
     }
    },
    {
     // https://docs.microsoft.com/en-us/azure/templates/microsoft.keyvault/allversions
     "comments": "Azure Key Vault Secret (Kubernetes Service Principal Client Secret)",
     "type": "Microsoft.KeyVault/vaults/secrets",
     "name": "[concat(parameters('key_vault_name'), '/KubernetesServicePrincipalClientSecret')]",
     "apiVersion": "2018-02-14",
     "dependsOn": [
       "[variables('key_vault_resourceId')]",
       "[variables('kubernetes_resourceId')]"
     ],
     "properties": {
       "contentType": "text/plain",
       "value": "[parameters('kubernetes_servicePrincipalClientSecret')]"
     }
    },
    {
      // https://docs.microsoft.com/en-us/azure/templates/microsoft.insights/components
      "comments": "Azure Application Insights",
      "type": "microsoft.insights/components",
      "name": "[parameters('application_insights_name')]",
      "apiVersion": "2015-05-01",
      "location": "[parameters('application_insights_location')]",
      "kind": "[parameters('application_insights_kind')]",
      "properties": {
        "Application_Type": "[parameters('application_insights_type')]",
        "Flow_Type": "Bluefield",
        "Request_Source": "rest",
        "SamplingPercentage": "application_insights_samplingPercentage"
      },
      "tags": {
        "Environment": "[parameters('environment')]"
      }
    },
    {
      // https://docs.microsoft.com/en-us/azure/templates/microsoft.operationalinsights/2015-11-01-preview/workspaces
      "comments": "Azure Log Analytics",
      "type": "Microsoft.OperationalInsights/workspaces",
      "name": "[parameters('log_analytics_name')]",
      "apiVersion": "2015-11-01-preview",
      "location": "[parameters('log_analytics_location')]",
      "properties": {
        "sku": {
          "name": "[parameters('log_analytics_sku')]"
        },
        "retentionInDays": "[parameters('log_analytics_retentionInDays')]"
      },
      "tags": {
        "Environment": "[parameters('environment')]"
      }
    },
    {
      // https://docs.microsoft.com/en-us/azure/log-analytics/log-analytics-template-workspace-configuration
      "type": "Microsoft.OperationsManagement/solutions",
      "name": "[variables('container_insights_name')]",
      "apiVersion": "2015-11-01-preview",
      "location": "[parameters('log_analytics_location')]",
      "dependsOn": [
        "[variables('log_analytics_resourceId')]"
      ],
      "properties": {
        "workspaceResourceId": "[parameters('log_analytics_workspaceId')]"
      },
      "plan": {
        "name": "[variables('container_insights_name')]",
        "product": "[concat('OMSGallery/', 'ContainerInsights')]",
        "promotionCode": "",
        "publisher": "Microsoft"
      },
      "tags": {
        "Environment": "[parameters('environment')]"
      }
    },
    {
      // https://docs.microsoft.com/en-us/azure/templates/microsoft.containerservice/2018-03-31/managedclusters
      "comments": "Azure Kubernetes Service",
      "type": "Microsoft.ContainerService/managedClusters",
      "name": "[parameters('kubernetes_name')]",
      "apiVersion": "2019-04-01",
      "location": "[parameters('kubernetes_location')]",
      "dependsOn": [
        "[variables('container_insights_resourceId')]",
        "[variables('log_analytics_resourceId')]"
      ],
      "properties": {
        "kubernetesVersion": "[parameters('kubernetes_kubernetesVersion')]",
        "dnsPrefix": "[parameters('kubernetes_dnsPrefix')]",
        "nodeResourceGroup": "[concat('Kubernetes-', resourceGroup().name)]",
        "enableRBAC": "[parameters('kubernetes_enableRBAC')]",
        "enablePodSecurityPolicy": "[parameters('kubernetes_enablePodSecurityPolicy')]",
        "addonProfiles": {
          "httpApplicationRouting": {
            "enabled": "[parameters('kubernetes_enableHttpApplicationRouting')]"
          },
          "omsagent": {
            "enabled": "[parameters('kubernetes_enableOmsAgent')]",
            "config": {
              "logAnalyticsWorkspaceResourceID": "[parameters('log_analytics_workspaceId')]"
            }
          }
        },
        "agentPoolProfiles": [
          {
            "name": "main",
            "count": "[parameters('kubernetes_mainAgentPool_agentCount')]",
            // "enableAutoScaling": "[parameters('kubernetes_mainAgentPool_enableAutoScaling')]",
            // "maxCount": "[parameters('kubernetes_mainAgentPool_maxCount')]",
            // "minCount": "[parameters('kubernetes_mainAgentPool_minCount')]",
            "maxPods": "[parameters('kubernetes_mainAgentPool_maxPods')]",
            // "type": "VirtualMachineScaleSets",
            "osDiskSizeGB": "[parameters('kubernetes_mainAgentPool_osDiskSizeGB')]",
            "osType": "[parameters('kubernetes_mainAgentPool_osType')]",
            "storageProfile": "ManagedDisks",
            "vmSize": "[parameters('kubernetes_mainAgentPool_agentVMSize')]"
          }
        ],
        // "apiServerAuthorizedIPRanges": [
        //   "20.42.25.196/32",
        //   "172.0.0.10/16",
        // ],
        //"linuxProfile": {
        //  "adminUsername": "[parameters('kubernetes_adminUsername')]",
        //  "ssh": {
        //    "publicKeys": [
        //      {
        //        "keyData": "[parameters('kubernetes_sshPublicKey')]"
        //      }
        //    ]
        //  }
        //},
        "servicePrincipalProfile": {
          "clientId": "[parameters('kubernetes_servicePrincipalClientId')]",
          "secret": "[parameters('kubernetes_servicePrincipalClientSecret')]"
        },
        "networkProfile": {
          "networkPlugin": "[parameters('kubernetes_networkPlugin')]",
          "networkPolicy": "[parameters('kubernetes_networkPolicy')]",
        }
      },
      "tags": {
        "Environment": "[parameters('environment')]"
      }
    }
  ],
  "outputs": {
    "application_insights_instrumentationKey": {
      "type": "securestring",
      "value": "[reference(variables('application_insights_resourceId'), '2014-04-01').InstrumentationKey]"
    },
    "kubernetes_fqdn": {
      "type": "string",
      "value": "[reference(variables('kubernetes_resourceId')).fqdn]"
    }
    //"kubernetes_sshCommand": {
    //  "type": "string",
    //  "value": "[concat('ssh ', parameters('kubernetes_adminUsername'), '@', reference(variables('kubernetes_resourceId')).fqdn, ' -A -p 22')]"
    //}
  }
}
